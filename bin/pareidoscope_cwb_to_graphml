#!/usr/bin/python
# -*- coding: utf-8 -*-

import argparse
import json

from pareidoscope.utils import cwb
from pareidoscope.utils import helper
from pareidoscope.utils import nx_graph



if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Convert a corpus in CWB format to chemical format suitable for use with Gaston')
    parser.add_argument("-o", "--output", type=argparse.FileType("w"), required=True, help="Output file")
    parser.add_argument("CORPUS", type=argparse.FileType("r"), help="Corpus in CWB format")
    args = parser.parse_args()
    
    vertice_dict, edge_dict = {}, {}
    sents = cwb.sentences_iter(args.CORPUS, return_id=True)
    for i, (sentence, origid) in enumerate(sents):
        gs = nx_graph.create_nx_digraph_from_cwb(sentence, origid)
        sensible = nx_graph.is_sensible_graph(gs)
        chemical = nx_graph.export_to_chemical_format(gs, vertice_dict, edge_dict)
        if sensible:
            chemical[0] += str(i)
            args.output.write("\n".join(chemical) + "\n")
    vertice_dict = {str(v): k for k, v in vertice_dict.iteritems()}
    edge_dict = {str(v): k for k, v in edge_dict.iteritems()}
    args.output.write("# vertices:\n")
    args.output.write("# " + json.dumps(vertice_dict) + "\n")
    args.output.write("# edges:\n")
    args.output.write("# " + json.dumps(edge_dict) + "\n")
